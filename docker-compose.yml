services:
  zitadel-external-tls:
    extends:
      service: zitadel-init
    command: 'start-from-setup --init-projections --masterkey "${ZITADEL_MASTERKEY}" --config /zitadel.yaml --steps /zitadel.yaml'
    environment:
      - ZITADEL_EXTERNALPORT=443
      - ZITADEL_EXTERNALSECURE=true
      - ZITADEL_TLS_ENABLED=false
      - ZITADEL_DATABASE_POSTGRES_HOST=db
      - ZITADEL_DATABASE_POSTGRES_PORT=5432
      - ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
      - ZITADEL_DATABASE_POSTGRES_USER_USERNAME=${ZITADEL_DB_USER}
      - ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=${ZITADEL_DB_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable
      - ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=${POSTGRES_USER}
      - ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=${POSTGRES_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable
    networks:
      - "zitadel"
    depends_on:
      zitadel-init:
        condition: "service_completed_successfully"
      db:
        condition: "service_healthy"
  zitadel-init:
    user: "${UID}"
    image: "${ZITADEL_IMAGE:-ghcr.io/zitadel/zitadel:stable}"
    command: "init --config /zitadel.yaml"
    depends_on:
      db:
        condition: "service_healthy"
    environment:
      - ZITADEL_EXTERNALDOMAIN=${ZITADEL_DOMAIN}
      - ZITADEL_LOGSTORE_ACCESS_STDOUT_ENABLED=true
      - ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORDCHANGEREQUIRED=false
      - ZITADEL_DATABASE_POSTGRES_HOST=db
      - ZITADEL_DATABASE_POSTGRES_PORT=5432
      - ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
      - ZITADEL_DATABASE_POSTGRES_USER_USERNAME=${ZITADEL_DB_USER}
      - ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=${ZITADEL_DB_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable
      - ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=${POSTGRES_USER}
      - ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=${POSTGRES_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable
    networks:
      - "zitadel"
    healthcheck:
      test: ["CMD", "/app/zitadel", "ready"]
      interval: "10s"
      timeout: "5s"
      retries: 5
      start_period: "10s"
  db:
    restart: "always"
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 60s
      retries: 10
      start_period: 5s
    networks:
      - "zitadel"
    volumes:
      - "data:/var/lib/postgresql/data:rw"
networks:
  zitadel:
volumes:
  data:
